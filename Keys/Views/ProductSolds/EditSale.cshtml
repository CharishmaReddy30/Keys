@model Keys.ViewModels.SalesViewModel
<style>
    .validationMessage {
        color: red;
    }
    #datesold{
        color:red;
    }
</style>
<div>
    <form id="myFormEdit">
        @Html.HiddenFor(m => m.ProductSold.Id)
        <div class="form-group">
            @Html.Label("Select Customer", new { @class = "col-xs-3" })
            <div class="col-xs-9">
                @Html.DropDownListFor(model => model.ProductSold.CustomerId, ViewBag.CustomerList as SelectList, "Select Customer", new { @class = "form-control", @id = "customer", @data_bind = "value:Customer" })
                @Html.ValidationMessageFor(m => m.ProductSold.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="padding-top:10%">
            @Html.Label("Product Name", new { @class = "col-xs-3" })
            <div class="col-xs-9">
                @Html.DropDownListFor(model => model.ProductSold.ProductId, ViewBag.ProductList as SelectList, "Select Product", new { @class = "form-control", @id = "product", @data_bind = "value:Product" })
                @Html.ValidationMessageFor(m => m.ProductSold.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="padding-top:7%">
            @Html.Label("Store Name", new { @class = "col-xs-3" })
            <div class="col-xs-9">
                @Html.DropDownListFor(model => model.ProductSold.StoreId, ViewBag.StoreList as SelectList, "Select Store", new { @class = "form-control", @id = "store", @data_bind = "value:Store" })
                @Html.ValidationMessageFor(m => m.ProductSold.StoreId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="padding-top:7%;padding-bottom:5%">
            @Html.Label("Date", new { @class = "col-xs-3" })
            <div class="col-xs-9">
                @Html.EditorFor(model => model.ProductSold.DateSold, new { htmlAttributes = new { @class = "form-control", @id = "Date", @data_bind = "value:Date, valueUpdate: 'keyup'", @onchange = "ClearDate()" } })
                @Html.ValidationMessageFor(m => m.ProductSold.DateSold, "", new { @class = "text-danger" })
                <span id="datesold"></span>
            </div>
        </div>
    </form>
</div>

<script src="~/Scripts/knockout-3.4.2.debug.js"></script>
<script src="~/Scripts/knockout.validation.js"></script>
<script>
    $(document).ready(function () {
        (function ($) {

            var contactInfo = {
                Customer: ko.observable($("#Customer")).extend({ required: true }),
                Product: ko.observable($("#Product")).extend({ required: true }),
                Store: ko.observable($("#Store")).extend({ required: true }),
                Date: ko.observable($("#Date").val()).extend({ required: true })
            };


            ko.applyBindings(contactInfo);
        }($))
        $("#btnSubmitEdit").click(function () {
            var data = $("#myFormEdit").serialize();
            $.ajax({
                type: "POST",
                url: "/ProductSolds/Index",
                data: data,
                success: function (response) {
                    var date = $("#datesold");
                    if (response) {
                        $("#myModal1").modal("hide");
                        window.location.href = "/ProductSolds/Index";
                    }
                    else {
                        date.html("Date should be less than Today's Date!");
                    }
                }
            })
        })
    })
    var ClearDate = function () {
        $("#datesold").html("");
    }
</script>


