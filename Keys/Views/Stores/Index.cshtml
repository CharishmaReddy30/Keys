@model Keys.ViewModels.StoreViewModel

@{
    ViewBag.Title = "Index";
}
<style>
    .validationMessage {
        color: red;
    }
    #message{
        color : red;
    }
</style>
<h2>Stores</h2>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
<div class="container">
    <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#myModal">Add New Store</a>
    <div>
        <div class="modal fade" id="myModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h3 class="modal-title">Store Details</h3>
                    </div>
                    <div class="modal-body">
                        <form id="myForm">
                            @Html.LabelFor(model => model.Store.Name)
                            @Html.TextBoxFor(model => model.Store.Name, new { @class = "form-control", @placeholder = "Name", @data_bind = "value:Name, valueUpdate: 'keyup'", @onkeydown = "ClearText()" })
                            @Html.ValidationMessageFor(m => m.Store.Name, "", new { @class = "text-danger" })
                            <span id="message"></span>
                            <div>
                                @Html.LabelFor(model => model.Store.Address)
                                @Html.TextBoxFor(model => model.Store.Address, new { @class = "form-control", @placeholder = "Address", @data_bind = "value:Address, valueUpdate: 'keyup'" })
                                @Html.ValidationMessageFor(m => m.Store.Address, "", new { @class = "text-danger" })
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <input type="reset" value="Save" class="btn btn-default" id="btnSubmit" data-bind="enable:Name.isValid() && Address.isValid()" />
                        <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (!Model.StoreList.Any())
    {
        {
            <p style="margin: auto;width: 50%;padding: 10px;">There are No Stores Yet!!</p>
        }
    }
    else
    {
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>
                        @Html.Label("Name")
                    </th>
                    <th>
                        @Html.Label("Address")
                    </th>
                    <th>@Html.Label("Action(Edit)")</th>
                    <th>@Html.Label("Action(Delete)")</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.StoreList)
                {
                    <tr id="row_@item.Id">
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td><a href="#" class="btn btn-warning" onclick="EditStore(@item.Id)"><i class="glyphicon glyphicon-edit"> Edit</i> </a> </td>
                        <td><a href="#" class="btn btn-danger" onclick="ConfirmDelete(@item.Id)"><i class="glyphicon glyphicon-trash"> Delete</i> </a> </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <div class="modal fade" id="myModalDelete">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title">Delete Store</h3>
                </div>
                <div class="modal-body" id="myBodyDiv">
                    <h4>Are you sure ? You want to delete this. </h4>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <a href="#" class="btn btn-success" onclick="DeleteStore()">Confirm</a>
                </div>
            </div>
        </div>
        <input type="hidden" id="hiddenStoreId" />
    </div>
    <div class="modal fade" id="myModal1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title">Edit Store</h3>
                </div>
                <div class="modal-body" id="myModalBodyDiv1">
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input type="reset" value="Save" class="btn btn-default" id="btnSubmitEdit" data-bind="enable:Name.isValid() && Address.isValid()" />
                </div>

            </div>

        </div>

    </div>
</div>
<script src="~/Scripts/knockout-3.4.2.debug.js"></script>
<script src="~/Scripts/knockout.validation.js"></script>
<script>
    $(document).ready(function () {
        (function ($) {
            var contactInfo = {
                Name: ko.observable($("#Name").val()).extend({
                    required: {
                        params: true,
                        message: "Please Enter The Name"
                    }, minLength: {
                        params: 2,
                        message: "Invalid Name , Please Enter Atleast 2 Letters"
                    }, maxLength: 50
                }),
                Address: ko.observable($("#Address").val()).extend({
                    required: {
                        params: true,
                        message: "Please Enter The Address"
                    }, minLength: {
                        params: 2,
                        message: "Invalid Address , Please Enter Atleast 2 Letters"
                    }, maxLength: 200
                })
            };


            ko.applyBindings(contactInfo);
        }($))
        $("#btnSubmit").click(function () {
            var data = $("#myForm").serialize();
            debugger
            $.ajax({
                type: "POST",
                url: "/Stores/Index",
                data: data,
                success: function (response) {
                    var message = $("#message");
                    if (response) {
                        $("#myModal").modal("hide");
                        window.location.href = "/Stores/Index";
                    }
                    else {
                        message.html("Name already exists.Please choose a different Name!");
                    }
                }
            })
        })
    })
    var ConfirmDelete = function (storeId) {
        $("#hiddenStoreId").val(storeId);
        $("#myModalDelete").modal('show');
    }
    var DeleteStore = function () {
        var sId = $("#hiddenStoreId").val();
        $.ajax({
            type: "POST",
            url: "/Stores/DeleteStore",
            data: { storeId: sId },
            success: function (result) {
                $("#myModalDelete").modal("hide");
                $("#row_" + sId).remove();
            }
        })
    }
    var EditStore = function (storeId) {
        var url = "/Stores/EditStore?storeId=" + storeId;
        $("#myModalBodyDiv1").load(url, function () {
            $("#myModal1").modal("show");
        })
    }
    var ClearText = function () {
        $("#message").html("");
    }
</script>